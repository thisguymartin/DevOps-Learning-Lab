version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
      - "8080:8080" # Traefik Dashboard
    command:
      # Enable Docker provider
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik-network
      
      # Entry points
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      
      # Enable dashboard
      - --api.dashboard=true
      - --api.insecure=true
      
      # Enable access logs
      - --accesslog=true
      - --log.level=INFO
      
      # HTTP to HTTPS redirect
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      
      # Let's Encrypt (for production)
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=your-email@example.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-letsencrypt:/letsencrypt
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"

  # Example web application 1
  whoami1:
    image: traefik/whoami
    container_name: whoami1
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami1.rule=Host(`app1.localhost`)"
      - "traefik.http.routers.whoami1.entrypoints=websecure"
      - "traefik.http.routers.whoami1.tls=true"
      - "traefik.http.services.whoami1.loadbalancer.server.port=80"

  # Example web application 2  
  whoami2:
    image: traefik/whoami
    container_name: whoami2
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami2.rule=Host(`app2.localhost`)"
      - "traefik.http.routers.whoami2.entrypoints=websecure"
      - "traefik.http.routers.whoami2.tls=true"
      - "traefik.http.services.whoami2.loadbalancer.server.port=80"

  # Example of path-based routing
  nginx-demo:
    image: nginx:alpine
    container_name: nginx-demo
    volumes:
      - ./demo.html:/usr/share/nginx/html/index.html:ro
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"  
      - "traefik.http.routers.nginx-demo.rule=Host(`demo.localhost`) && PathPrefix(`/nginx`)"
      - "traefik.http.routers.nginx-demo.entrypoints=websecure"
      - "traefik.http.routers.nginx-demo.tls=true"
      - "traefik.http.routers.nginx-demo.middlewares=nginx-stripprefix"
      - "traefik.http.middlewares.nginx-stripprefix.stripprefix.prefixes=/nginx"

  # Load balanced service (multiple replicas)
  web-app:
    image: nginx:alpine
    networks:
      - traefik-network
    volumes:
      - ./web-app.html:/usr/share/nginx/html/index.html:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web-app.rule=Host(`web.localhost`)"
      - "traefik.http.routers.web-app.entrypoints=websecure"
      - "traefik.http.routers.web-app.tls=true"
    deploy:
      replicas: 3

volumes:
  traefik-letsencrypt:

networks:
  traefik-network:
    external: true